@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x                       : 0px !default;
$hamburger-padding-y                       : 0px !default;
$hamburger-layer-width                     : 28px !default;
$hamburger-layer-height                    : 3px !default;
$hamburger-layer-spacing                   : 6px !default;
$hamburger-layer-color                     : #5f5fff !default;
$hamburger-layer-border-radius             : 2px !default;
$hamburger-hover-opacity                   : 1 !default;
$hamburger-hover-transition-duration       : 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter    : none !default;

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (
  3dx,
  3dx-r,
  3dy,
  3dy-r,
  3dxy,
  3dxy-r,
  arrow,
  arrow-r,
  arrowalt,
  arrowalt-r,
  arrowturn,
  arrowturn-r,
  boring,
  collapse,
  collapse-r,
  elastic,
  elastic-r,
  emphatic,
  emphatic-r,
  minus,
  slider,
  slider-r,
  spin,
  spin-r,
  spring,
  spring-r,
  stand,
  stand-r,
  squeeze,
  vortex,
  vortex-r
) !default;

// Hamburger
// ==================================================
.hamburger {
  padding: $hamburger-padding-y $hamburger-padding-x;
  @media (min-width: 890px) {
    display: none;
  }
  @media (max-width: 889px) {
    display: inline-block;
  }
  cursor: pointer;

  transition-property: opacity, filter;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  outline: none;
  overflow: visible;
  transition: all .15s linear;
  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
      .hamburger-inner {
        &,
        &::before,
        &::after { transition: all .15s linear; background-color: rgba(38,28,70,1);}
      }
    }
  }
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}

// Spin animation


.hamburger--spin {
  .hamburger-inner {
    transition-duration: 0.22s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::before {
      transition: top 0.1s 0.25s ease-in,
                  opacity 0.1s ease-in;
    }

    &::after {
      transition: bottom 0.1s 0.25s ease-in,
                  transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.is-active {
    .hamburger-inner {
      transform: rotate(225deg);
      transition-delay: 0.12s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      background-color: rgba(38,28,70,1);

      &::before {
        top: 0;
        opacity: 0;
        background-color: rgba(38,28,70,1);
        transition: top 0.1s ease-out,
                    opacity 0.1s 0.12s ease-out;
      }

      &::after {
        bottom: 0;
        background-color: rgba(38,28,70,1);
        transform: rotate(-90deg);
        transition: bottom 0.1s ease-out,
                    transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
    }
  }
}


// Navbar

.Navbar__Mobile {
  position: fixed;
  padding: 75px 25px 25px 25px;
  top: 0px;
  right: 0px;
  width: 100%;
  height: 100vh;
  background: #5f5fff;
  opacity: 0;
  z-index: -1;
  transition: all .1s linear;
  &--Contents {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    &--Item {
      font-size: 1.25em;
      margin-top: 25px;
      color: white;
    }
  }
  &--Open {
    opacity: 1;
    z-index: 1;
    pointer-events: all;
  }
}

// Old -- Refactoring

.navbar__hamburger {
  position: absolute;
  top: 29px;
  right: 25px;
  z-index: 2;
  cursor: pointer;
  &:hover { background-color: transparent !important; }
}

.navbar__hamburger,
.Navbar__Mobile {
  display: block;
  @media (min-width: 890px) {
    display: none;
  }
}

.Navigation--Desktop {
  margin-left: auto;
  display: none;
  @media (min-width: 890px) {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
